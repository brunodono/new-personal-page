[
    {
        "title": "Organo 2.0",
        "info": "Organo 2.0 is a new responsive version of a project I've made in the past with refactored parts and some new features. Organo is an application made to register and expose the contributors of a Brazilian IT school with their respective name, occupation, images and team on dynamic cards.",
        "code": "https://github.com/brunodono/organo-2.0",
        "live": "https://organo-2-0.vercel.app/",
        "image": "https://github.com/brunodono/organo-2.0/blob/main/organo_gif.gif?raw=true"
    },
    {
        "title": "Secret Santa Selector(TDD)",
        "info": "Secret Santa Selector project was created with the concept of TDD (Test Driven Development) the focus was on the componentâ€™s tests, which were made using testing library from react. Some tests implemented: snapshot test for a no behaviour page, form functionalities, participants list and so on. For an easier implementation it was used mocking tool from Jest library on some values, so it is independent of the global state. The application is fully flexible and consists in randomly sorting names to a classic Secret Santa game.",
        "code": "https://github.com/brunodono/secret-santa-random-selector-test",
        "live": "https://secret-santa-randomize-selector.vercel.app/",
        "image": "https://raw.githubusercontent.com/brunodono/secret-santa-random-selector-test/main/Screenshot_1.png"
    },
    {
        "title": "Daily Market(E-Commerce)",
        "info": "Daily Market is an E-commerce application with its global state managed with ContextAPI. \n *Login screen(UserContext) with Name, and Balance, that are transfered to the following screen.\n *Market screen has the Shopping Cart context and displays the products that can be added and removed to the cart.\n *Shopping Cart screen has the payment context, at the moment three payment methods can be chosen and they are automatically applied to the Total in the cart. \n Customized hooks and connections among contexts were made to centralize the maintenance responsibility of the context out of the components and to have a better performance.",
        "code": "https://github.com/brunodono/daily-market",
        "live": "https://daily-market.vercel.app/",
        "image": "https://raw.githubusercontent.com/brunodono/daily-market/main/Screenshot_2.png"
    },
    {
        "title": "Event Tracker",
        "info": "Event Tracker is a calendar project which I have worked on to fix state and responsibilities problems. I used Recoil to manage the state of the application. I followed the principle of DRY encapsulating the recoil method, made customized hooks and created a simulation of an API with json-server.",
        "code": "https://github.com/brunodono/event-tracker",
        "live": "",
        "image": "https://raw.githubusercontent.com/brunodono/event-tracker/main/Screenshot.png"
    },
    {
        "title": "Let Eat Be",
        "info": "Italian restaurant application where you can access a menu with italian dishes. The system counts with an input to search the desired dish (no capital sensitive), also filter dishes by category and sort them by how many people the dish serves, portion and price, the cheapest to the most expensive. The details of each dish can be viewed on click. There is also the Home page which has a section that suggest three dishes randomly as Chef recommendations. If by chance a non existent route is accessed, a Not Found (404) page will be shown. Last but not least the about page with details of the restaurant.","code": "https://github.com/brunodono/let-eat-be-restaurant",
        "live": "https://let-eat-be-restaurant.vercel.app/",
        "image": "https://raw.githubusercontent.com/brunodono/let-eat-be-restaurant/main/Screenshot.png"
    },
    {
        "title": "React Studies",
        "info": "An application to control tasks to be done with a timer. Built with create react app, applied with TypeScript. The app has external packages such as uuid, SASS, switchalert",
        "code": "https://github.com/brunodono/react-studies-react-ts",
        "live": "https://react-studies-react-ts.vercel.app/",
        "image": "https://raw.githubusercontent.com/brunodono/react-studies-react-ts/main/src/assets/img/gif-app.gif"
    },
    {
        "title": "Organo",
        "info": "A react application made to register and expose the contributors of a Brazilian IT school with their respective name, occupation, images and team on dynamic cards.",
        "code": "https://github.com/brunodono/organo-react.js",
        "live": "https://organo-react-js.vercel.app/",
        "image": "https://raw.githubusercontent.com/brunodono/organo-react.js/main/screenshot1.png"
    },
    {
        "title": "My Comment App",
        "info": "It's an application fully developed on React with JavaScript (JSX) where the user can add and remove comments. On the application it was implemented classes, state and the external packages sweetalert.",
        "code": "https://github.com/brunodono/My-comment-app-react.js",
        "live": "https://my-comment-app-react-js.vercel.app/",
        "image": "https://raw.githubusercontent.com/brunodono/My-comment-app-react.js/main/resources/screenshots/print1.png"
    },
    {
        "title": "Tell Me A Joke",
        "info": "That is a very simple application that just throws a new joke out of an API on every button click.",
        "code": "https://github.com/brunodono/tell-me-a-joke-react.ts",
        "live": "https://tell-me-a-joke-react-ts.vercel.app/",
        "image": "https://raw.githubusercontent.com/brunodono/tell-me-a-joke-react.ts/main/Screenshot_2.png"
    }
]